//O paradigma imperativo determina que as instruções passadas ao computador devem especificar o passo a passo das ações que serão executadas. Tais ações mudam o estado do programa através do uso de variáveis que ficam armazenadas em memória, até chegar a um resultado esperado. 

#include <stdio.h>
#include <stdlib.h>

int main() {
  // Número secreto aleatório
  int numeroSecreto = rand() % 100 + 1;

  // Variáveis para tentativa e número de tentativas
  int tentativa, numeroTentativas = 0;

  do {
    // Entrada da tentativa do jogador
    printf("Digite um número entre 1 e 100: ");
    scanf("%d", &tentativa);

    numeroTentativas++; // Incrementando o contador de tentativas

    // Verificação da tentativa
    if (tentativa < numeroSecreto) {
      printf("O número secreto é maior que %d.\n", tentativa);
    } else if (tentativa > numeroSecreto) {
      printf("O número secreto é menor que %d.\n", tentativa);
    } else {
      printf("Parabéns! Você acertou o número secreto em %d tentativas!\n", numeroTentativas);
      break; // Encerrando o loop se acertou
    }
  } while (numeroTentativas < 10); // Condição de parada: 10 tentativas

  // Mensagem de fim de jogo
  if (numeroTentativas == 10) {
    printf("Infelizmente, você não acertou o número secreto em 10 tentativas.\n");
  }

  return 0;
}

//Controle Detalhado: O programa utiliza instruções detalhadas para controlar o fluxo do jogo, verificando cada tentativa e respondendo de acordo.
//Loops e Condições: O loop do-while garante que o jogo continue enquanto o jogador não acerta o número secreto ou não excede o limite de tentativas.
//Modificação do Estado: O programa modifica o estado do jogo a cada tentativa, atualizando o número de tentativas e fornecendo feedback ao jogador.
